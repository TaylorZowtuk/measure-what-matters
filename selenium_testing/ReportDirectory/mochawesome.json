{
  "stats": {
    "suites": 2,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2020-11-26T20:34:57.011Z",
    "end": "2020-11-26T20:35:31.329Z",
    "duration": 34318,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3c797469-6f67-452e-8932-aa8fea07c602",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5cad87e6-4432-430e-8a77-1be10013a936",
          "title": "MWM tests",
          "fullFile": "C:\\Users\\bsami\\OneDrive\\Desktop\\teamsnap-game-observation\\selenium_testing\\src\\test\\MWMselenium.ts",
          "file": "\\src\\test\\MWMselenium.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Before in \"MWM tests\"",
              "fullTitle": "MWM tests \"before all\" hook: Before in \"MWM tests\"",
              "timedOut": false,
              "duration": 22,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            driver = new selenium_webdriver_1.Builder().forBrowser(\"chrome\").build();\n            return [2 /*return*/];\n        });\n    });",
              "err": {},
              "uuid": "a0113758-6d97-442c-a23b-f9a01eb22f0f",
              "parentUUID": "5cad87e6-4432-430e-8a77-1be10013a936",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: After in \"MWM tests\"",
              "fullTitle": "MWM tests \"after all\" hook: After in \"MWM tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            try {\n                driver.quit();\n            }\n            catch (error) {\n                console.log('error is here on driver quit');\n                console.log(error);\n            }\n            return [2 /*return*/];\n        });\n    });",
              "err": {},
              "uuid": "adc79646-4453-4472-8c62-50bf7346cd83",
              "parentUUID": "5cad87e6-4432-430e-8a77-1be10013a936",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "10e3608b-81a9-4066-ba23-a2d49d03dc6b",
              "title": "App run through",
              "fullFile": "C:\\Users\\bsami\\OneDrive\\Desktop\\teamsnap-game-observation\\selenium_testing\\src\\test\\MWMselenium.ts",
              "file": "\\src\\test\\MWMselenium.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Open MWM and check URL correct",
                  "fullTitle": "MWM tests App run through Open MWM and check URL correct",
                  "timedOut": false,
                  "duration": 4235,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return __awaiter(void 0, void 0, void 0, function () {\n                var driver, currentUrl;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, new selenium_webdriver_1.Builder().forBrowser('chrome').build()];\n                        case 1:\n                            driver = _a.sent();\n                            return [4 /*yield*/, driver.get('http://2a246.yeg.rac.sh/')];\n                        case 2:\n                            _a.sent();\n                            return [4 /*yield*/, driver.getCurrentUrl()];\n                        case 3:\n                            currentUrl = _a.sent();\n                            // make sure correct URL opened\n                            assert.strictEqual('http://2a246.yeg.rac.sh/', currentUrl, 'Correct URL not opened');\n                            return [2 /*return*/];\n                    }\n                });\n            });",
                  "err": {},
                  "uuid": "bc8b99ef-9b75-4870-ada3-5530d1645cea",
                  "parentUUID": "10e3608b-81a9-4066-ba23-a2d49d03dc6b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "MWM sign up",
                  "fullTitle": "MWM tests App run through MWM sign up",
                  "timedOut": false,
                  "duration": 6683,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return __awaiter(void 0, void 0, void 0, function () {\n                var driver, nameElements, passwordElements, notMatchingPasswords;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, new selenium_webdriver_1.Builder().forBrowser('chrome').build()];\n                        case 1:\n                            driver = _a.sent();\n                            return [4 /*yield*/, driver.get('http://2a246.yeg.rac.sh/')];\n                        case 2:\n                            _a.sent();\n                            return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.xpath(\"//a[@href ='/signup']\"))];\n                        case 3: \n                        // opening signup page\n                        return [4 /*yield*/, (_a.sent()).click()];\n                        case 4:\n                            // opening signup page\n                            _a.sent();\n                            return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementsLocated(selenium_webdriver_1.By.id('outlined-margin-dense')))];\n                        case 5:\n                            nameElements = _a.sent();\n                            // sending keys to these elements\n                            sleep(0.2);\n                            return [4 /*yield*/, nameElements[0].sendKeys('firstName')];\n                        case 6:\n                            _a.sent();\n                            return [4 /*yield*/, nameElements[1].sendKeys('lastName')];\n                        case 7:\n                            _a.sent();\n                            return [4 /*yield*/, nameElements[2].sendKeys(username)];\n                        case 8:\n                            _a.sent();\n                            return [4 /*yield*/, driver.findElements(selenium_webdriver_1.By.id('outlined-adornment-password'))];\n                        case 9:\n                            passwordElements = _a.sent();\n                            // sending keys to passwords that do not match\n                            return [4 /*yield*/, passwordElements[0].sendKeys('password')];\n                        case 10:\n                            // sending keys to passwords that do not match\n                            _a.sent();\n                            return [4 /*yield*/, passwordElements[1].sendKeys('password2')];\n                        case 11:\n                            _a.sent();\n                            return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.className('MuiButton-label'))];\n                        case 12: \n                        // click signup button\n                        return [4 /*yield*/, (_a.sent()).click()];\n                        case 13:\n                            // click signup button\n                            _a.sent();\n                            sleep(2);\n                            return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementLocated(selenium_webdriver_1.By.xpath(\"//p[@style = 'color: crimson; font-size: 14px; width: 25ch; margin-left: auto; margin-right: auto;']\"))).getText()\n                                // testing that passwords not matching brings up a message to the user saying passwords don't match\n                            ];\n                        case 14:\n                            notMatchingPasswords = _a.sent();\n                            // testing that passwords not matching brings up a message to the user saying passwords don't match\n                            assert.strictEqual(notMatchingPasswords, 'Passwords must match!', 'Password not match error did not come up');\n                            // clearing password elements to put a correct password in\n                            return [4 /*yield*/, passwordElements[0].sendKeys(selenium_webdriver_1.Key.CONTROL + 'a')];\n                        case 15:\n                            // clearing password elements to put a correct password in\n                            _a.sent();\n                            return [4 /*yield*/, passwordElements[0].sendKeys(selenium_webdriver_1.Key.DELETE)];\n                        case 16:\n                            _a.sent();\n                            return [4 /*yield*/, passwordElements[1].sendKeys(selenium_webdriver_1.Key.CONTROL + 'a')];\n                        case 17:\n                            _a.sent();\n                            return [4 /*yield*/, passwordElements[1].sendKeys(selenium_webdriver_1.Key.DELETE)];\n                        case 18:\n                            _a.sent();\n                            // putting in correct passwords\n                            return [4 /*yield*/, passwordElements[0].sendKeys(password)];\n                        case 19:\n                            // putting in correct passwords\n                            _a.sent();\n                            return [4 /*yield*/, passwordElements[1].sendKeys(password)];\n                        case 20:\n                            _a.sent();\n                            return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.className('MuiButton-label'))];\n                        case 21: \n                        // clicking signup button with correct parameters in it\n                        return [4 /*yield*/, (_a.sent()).click()];\n                        case 22:\n                            // clicking signup button with correct parameters in it\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });",
                  "err": {},
                  "uuid": "ab352475-505b-4154-9c74-5cad4797bd72",
                  "parentUUID": "10e3608b-81a9-4066-ba23-a2d49d03dc6b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Logs into app, showing error handling when incorrect password or empty field present",
                  "fullTitle": "MWM tests App run through Logs into app, showing error handling when incorrect password or empty field present",
                  "timedOut": false,
                  "duration": 6108,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return __awaiter(void 0, void 0, void 0, function () {\n                var driver, userNameElement, passwordElement, loginButton, errorElement, errorMessage, currentUrl;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, new selenium_webdriver_1.Builder().forBrowser('chrome').build()];\n                        case 1:\n                            driver = _a.sent();\n                            return [4 /*yield*/, driver.get('http://2a246.yeg.rac.sh/')];\n                        case 2:\n                            _a.sent();\n                            return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.id('outlined-margin-dense'))];\n                        case 3:\n                            userNameElement = _a.sent();\n                            return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.id('outlined-adornment-password'))];\n                        case 4:\n                            passwordElement = _a.sent();\n                            return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.className('MuiButton-label'))];\n                        case 5:\n                            loginButton = _a.sent();\n                            return [4 /*yield*/, userNameElement.sendKeys('user')];\n                        case 6:\n                            _a.sent();\n                            return [4 /*yield*/, loginButton.click()];\n                        case 7:\n                            _a.sent();\n                            // quick wait to ensure element has been updated\n                            sleep(1);\n                            return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementLocated(selenium_webdriver_1.By.xpath(\"//p[@style ='color: crimson; font-size: 14px; width: 30ch; margin-left: auto; margin-right: auto;']\")))];\n                        case 8:\n                            errorElement = _a.sent();\n                            return [4 /*yield*/, errorElement.getText()];\n                        case 9:\n                            errorMessage = _a.sent();\n                            assert.strictEqual(errorMessage, 'Please enter username and password.', 'Empty username or password test failed');\n                            return [4 /*yield*/, passwordElement.sendKeys('pass')];\n                        case 10:\n                            _a.sent();\n                            return [4 /*yield*/, loginButton.click()];\n                        case 11:\n                            _a.sent();\n                            // quick wait to ensure element loaded with error message\n                            //driver.manage().setTimeouts({implicit:2000});\n                            sleep(1);\n                            return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementLocated(selenium_webdriver_1.By.xpath(\"//p[@style ='color: crimson; font-size: 14px; width: 30ch; margin-left: auto; margin-right: auto;']\")))];\n                        case 12:\n                            errorElement = _a.sent();\n                            return [4 /*yield*/, errorElement.getText()];\n                        case 13:\n                            errorMessage = _a.sent();\n                            assert.strictEqual(errorMessage, 'Wrong username or password.', 'Incorrect username or password test failed');\n                            // clearing username and password elements to put in correct username and password made in signup section\n                            return [4 /*yield*/, userNameElement.sendKeys(selenium_webdriver_1.Key.CONTROL + 'a')];\n                        case 14:\n                            // clearing username and password elements to put in correct username and password made in signup section\n                            _a.sent();\n                            return [4 /*yield*/, userNameElement.sendKeys(selenium_webdriver_1.Key.DELETE)];\n                        case 15:\n                            _a.sent();\n                            return [4 /*yield*/, passwordElement.sendKeys(selenium_webdriver_1.Key.CONTROL + 'a')];\n                        case 16:\n                            _a.sent();\n                            return [4 /*yield*/, passwordElement.sendKeys(selenium_webdriver_1.Key.DELETE)];\n                        case 17:\n                            _a.sent();\n                            return [4 /*yield*/, userNameElement.sendKeys(username)];\n                        case 18:\n                            _a.sent();\n                            return [4 /*yield*/, passwordElement.sendKeys(password)];\n                        case 19:\n                            _a.sent();\n                            return [4 /*yield*/, loginButton.click()];\n                        case 20:\n                            _a.sent();\n                            // make sure elements in dashboard located before continuing\n                            return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementLocated(selenium_webdriver_1.By.xpath(\"//a[@href ='/teams']\")))];\n                        case 21:\n                            // make sure elements in dashboard located before continuing\n                            _a.sent();\n                            return [4 /*yield*/, driver.getCurrentUrl()];\n                        case 22:\n                            currentUrl = _a.sent();\n                            // testing that logging in takes the user to the dashboard\n                            assert.strictEqual('http://2a246.yeg.rac.sh/dashboard', currentUrl, 'Should be on dashboard page after log in');\n                            return [2 /*return*/];\n                    }\n                });\n            });",
                  "err": {},
                  "uuid": "b31a2cd1-c728-41c5-8fbb-88241a1a6e34",
                  "parentUUID": "10e3608b-81a9-4066-ba23-a2d49d03dc6b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create a team and match",
                  "fullTitle": "MWM tests App run through Create a team and match",
                  "timedOut": false,
                  "duration": 8321,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return __awaiter(void 0, void 0, void 0, function () {\n                var driver, userNameElement, passwordElement, loginButton, teamsButton, currentURL, teamPageButtons, addTeamButton, textBoxesAddTeam, randName, createTeamButtons, clickablesWithSecondMenu, teamsAvailable;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, new selenium_webdriver_1.Builder().forBrowser('chrome').build()];\n                        case 1:\n                            driver = _a.sent();\n                            return [4 /*yield*/, driver.get('http://2a246.yeg.rac.sh/')];\n                        case 2:\n                            _a.sent();\n                            return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.id('outlined-margin-dense'))];\n                        case 3:\n                            userNameElement = _a.sent();\n                            return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.id('outlined-adornment-password'))];\n                        case 4:\n                            passwordElement = _a.sent();\n                            return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.className('MuiButton-label'))];\n                        case 5:\n                            loginButton = _a.sent();\n                            return [4 /*yield*/, userNameElement.sendKeys(username)];\n                        case 6:\n                            _a.sent();\n                            return [4 /*yield*/, passwordElement.sendKeys(password)];\n                        case 7:\n                            _a.sent();\n                            // log in \n                            return [4 /*yield*/, loginButton.click()];\n                        case 8:\n                            // log in \n                            _a.sent();\n                            // wait until expected component available as sometimes loads slowly here\n                            return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementLocated(selenium_webdriver_1.By.xpath(\"//a[@href ='/teams']\")))];\n                        case 9:\n                            // wait until expected component available as sometimes loads slowly here\n                            _a.sent();\n                            return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.xpath(\"//a[@href ='/teams']\"))];\n                        case 10:\n                            teamsButton = _a.sent();\n                            return [4 /*yield*/, teamsButton.click()];\n                        case 11:\n                            _a.sent();\n                            return [4 /*yield*/, driver.getCurrentUrl()];\n                        case 12:\n                            currentURL = _a.sent();\n                            // testing to see taken to teams page\n                            assert.strictEqual(currentURL, 'http://2a246.yeg.rac.sh/teams', 'Teams page loaded correctly');\n                            return [4 /*yield*/, driver.findElements(selenium_webdriver_1.By.className('MuiButton-label'))];\n                        case 13:\n                            teamPageButtons = _a.sent();\n                            addTeamButton = teamPageButtons[teamPageButtons.length - 2];\n                            return [4 /*yield*/, addTeamButton.click()];\n                        case 14:\n                            _a.sent();\n                            sleep(1);\n                            return [4 /*yield*/, driver.getCurrentUrl()];\n                        case 15:\n                            currentURL = _a.sent();\n                            // should be on create team page now\n                            assert.strictEqual(currentURL, 'http://2a246.yeg.rac.sh/create-team', 'Should now be on create team page');\n                            return [4 /*yield*/, driver.findElements(selenium_webdriver_1.By.xpath(\"//input[@type ='text']\"))];\n                        case 16:\n                            textBoxesAddTeam = _a.sent();\n                            randName = Math.floor(Math.random() * 100000000);\n                            return [4 /*yield*/, driver.findElements(selenium_webdriver_1.By.className('MuiButton-label'))];\n                        case 17:\n                            createTeamButtons = _a.sent();\n                            return [4 /*yield*/, textBoxesAddTeam[0].sendKeys(randName)];\n                        case 18:\n                            _a.sent();\n                            // populating players\n                            return [4 /*yield*/, textBoxesAddTeam[1].sendKeys('Joey')];\n                        case 19:\n                            // populating players\n                            _a.sent();\n                            return [4 /*yield*/, textBoxesAddTeam[2].sendKeys('Banks')];\n                        case 20:\n                            _a.sent();\n                            return [4 /*yield*/, textBoxesAddTeam[3].sendKeys(1)];\n                        case 21:\n                            _a.sent();\n                            return [4 /*yield*/, createTeamButtons[0].click()];\n                        case 22:\n                            _a.sent();\n                            return [4 /*yield*/, textBoxesAddTeam[1].sendKeys('Zoey')];\n                        case 23:\n                            _a.sent();\n                            return [4 /*yield*/, textBoxesAddTeam[2].sendKeys('Zoo')];\n                        case 24:\n                            _a.sent();\n                            return [4 /*yield*/, textBoxesAddTeam[3].sendKeys(2)];\n                        case 25:\n                            _a.sent();\n                            return [4 /*yield*/, createTeamButtons[0].click()];\n                        case 26:\n                            _a.sent();\n                            return [4 /*yield*/, textBoxesAddTeam[1].sendKeys('Mr')];\n                        case 27:\n                            _a.sent();\n                            return [4 /*yield*/, textBoxesAddTeam[2].sendKeys('Moo')];\n                        case 28:\n                            _a.sent();\n                            return [4 /*yield*/, textBoxesAddTeam[3].sendKeys(3)];\n                        case 29:\n                            _a.sent();\n                            return [4 /*yield*/, createTeamButtons[0].click()];\n                        case 30:\n                            _a.sent();\n                            return [4 /*yield*/, textBoxesAddTeam[1].sendKeys('GoodOl')];\n                        case 31:\n                            _a.sent();\n                            return [4 /*yield*/, textBoxesAddTeam[2].sendKeys('Lou')];\n                        case 32:\n                            _a.sent();\n                            return [4 /*yield*/, textBoxesAddTeam[3].sendKeys(4)];\n                        case 33:\n                            _a.sent();\n                            return [4 /*yield*/, createTeamButtons[0].click()];\n                        case 34:\n                            _a.sent();\n                            return [4 /*yield*/, textBoxesAddTeam[1].sendKeys('Red')];\n                        case 35:\n                            _a.sent();\n                            return [4 /*yield*/, textBoxesAddTeam[2].sendKeys('Hot')];\n                        case 36:\n                            _a.sent();\n                            return [4 /*yield*/, textBoxesAddTeam[3].sendKeys(5)];\n                        case 37:\n                            _a.sent();\n                            return [4 /*yield*/, createTeamButtons[0].click()];\n                        case 38:\n                            _a.sent();\n                            return [4 /*yield*/, textBoxesAddTeam[1].sendKeys('Mr')];\n                        case 39:\n                            _a.sent();\n                            return [4 /*yield*/, textBoxesAddTeam[2].sendKeys('Robot')];\n                        case 40:\n                            _a.sent();\n                            return [4 /*yield*/, textBoxesAddTeam[3].sendKeys(6)];\n                        case 41:\n                            _a.sent();\n                            return [4 /*yield*/, createTeamButtons[0].click()];\n                        case 42:\n                            _a.sent();\n                            return [4 /*yield*/, textBoxesAddTeam[1].sendKeys('Slow')];\n                        case 43:\n                            _a.sent();\n                            return [4 /*yield*/, textBoxesAddTeam[2].sendKeys('Poke')];\n                        case 44:\n                            _a.sent();\n                            return [4 /*yield*/, textBoxesAddTeam[3].sendKeys(7)];\n                        case 45:\n                            _a.sent();\n                            return [4 /*yield*/, createTeamButtons[0].click()];\n                        case 46:\n                            _a.sent();\n                            return [4 /*yield*/, textBoxesAddTeam[1].sendKeys('No')];\n                        case 47:\n                            _a.sent();\n                            return [4 /*yield*/, textBoxesAddTeam[2].sendKeys('Joke')];\n                        case 48:\n                            _a.sent();\n                            return [4 /*yield*/, textBoxesAddTeam[3].sendKeys(8)];\n                        case 49:\n                            _a.sent();\n                            return [4 /*yield*/, createTeamButtons[0].click()];\n                        case 50:\n                            _a.sent();\n                            // create the team\n                            return [4 /*yield*/, createTeamButtons[1].click()];\n                        case 51:\n                            // create the team\n                            _a.sent();\n                            // back to dashboard , just used get to simplify, but createTeamButton[2] would return to teams page then dashboard accessible using dashboard button\n                            return [4 /*yield*/, driver.get('http://2a246.yeg.rac.sh/dashboard')];\n                        case 52:\n                            // back to dashboard , just used get to simplify, but createTeamButton[2] would return to teams page then dashboard accessible using dashboard button\n                            _a.sent();\n                            // make a match with our new team\n                            return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementLocated(selenium_webdriver_1.By.xpath(\"//a[@href ='/create-match']\")), 10000).click()];\n                        case 53:\n                            // make a match with our new team\n                            _a.sent();\n                            return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementsLocated(selenium_webdriver_1.By.className(\"MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input\")))];\n                        case 54:\n                            clickablesWithSecondMenu = _a.sent();\n                            clickablesWithSecondMenu[0].click();\n                            sleep(1);\n                            return [4 /*yield*/, driver.getCurrentUrl()];\n                        case 55:\n                            currentURL = _a.sent();\n                            assert.strictEqual(currentURL, 'http://2a246.yeg.rac.sh/create-match', 'Correctly goes to create match page');\n                            return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementsLocated(selenium_webdriver_1.By.className(\"MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button\")))];\n                        case 56:\n                            teamsAvailable = _a.sent();\n                            return [4 /*yield*/, teamsAvailable[1].click()];\n                        case 57:\n                            _a.sent();\n                            // give opponent team name\n                            return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.id(\"standard-basic\")).sendKeys('The Tigers')];\n                        case 58:\n                            // give opponent team name\n                            _a.sent();\n                            return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.className(\"MuiButton-label\"))];\n                        case 59: \n                        // create the team\n                        return [4 /*yield*/, (_a.sent()).click()];\n                        case 60:\n                            // create the team\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });",
                  "err": {},
                  "uuid": "279b3603-48b2-40a5-842a-5a04498c96f3",
                  "parentUUID": "10e3608b-81a9-4066-ba23-a2d49d03dc6b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Records a created match, and pulls up tables after, then logs out",
                  "fullTitle": "MWM tests App run through Records a created match, and pulls up tables after, then logs out",
                  "timedOut": false,
                  "duration": 8930,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return __awaiter(void 0, void 0, void 0, function () {\n                var driver, userNameElement, passwordElement, loginButton, matchToRecord, currentURL, checkBoxesForLineup, currentURL2, i, matchLineupButtons, currentURL3, timer, timerTime, periodDisplay, periodDisplayText, tablesWithIds, possessionTimeTable, onForGoalTable, possessionTimeTableText, numberOfTouches, timeOnField, plusMinus, onForGoal, currentURL4;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, new selenium_webdriver_1.Builder().forBrowser('chrome').build()];\n                        case 1:\n                            driver = _a.sent();\n                            return [4 /*yield*/, driver.get('http://2a246.yeg.rac.sh/')];\n                        case 2:\n                            _a.sent();\n                            return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.id('outlined-margin-dense'))];\n                        case 3:\n                            userNameElement = _a.sent();\n                            return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.id('outlined-adornment-password'))];\n                        case 4:\n                            passwordElement = _a.sent();\n                            return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.className('MuiButton-label'))];\n                        case 5:\n                            loginButton = _a.sent();\n                            return [4 /*yield*/, userNameElement.sendKeys(username)];\n                        case 6:\n                            _a.sent();\n                            return [4 /*yield*/, passwordElement.sendKeys(password)];\n                        case 7:\n                            _a.sent();\n                            // log in \n                            return [4 /*yield*/, loginButton.click()];\n                        case 8:\n                            // log in \n                            _a.sent();\n                            return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementLocated(selenium_webdriver_1.By.xpath(\"//a[@href ='/matches/upcoming']\")))];\n                        case 9: \n                        // wait until element on dashboard available then click it\n                        return [4 /*yield*/, (_a.sent()).click()];\n                        case 10:\n                            // wait until element on dashboard available then click it\n                            _a.sent();\n                            return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementLocated(selenium_webdriver_1.By.className(\"MuiListItem-root MuiListItem-gutters MuiListItem-alignItemsFlexStart\")))];\n                        case 11:\n                            matchToRecord = _a.sent();\n                            return [4 /*yield*/, driver.getCurrentUrl()];\n                        case 12:\n                            currentURL = _a.sent();\n                            assert.strictEqual('http://2a246.yeg.rac.sh/matches/upcoming', currentURL, \"Clicking recordings on dashboard brings the user \");\n                            // click on first match to be recorded, will be available from last test\n                            return [4 /*yield*/, matchToRecord.click()];\n                        case 13:\n                            // click on first match to be recorded, will be available from last test\n                            _a.sent();\n                            return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementsLocated(selenium_webdriver_1.By.className('jss14')), 5000)];\n                        case 14:\n                            checkBoxesForLineup = _a.sent();\n                            return [4 /*yield*/, driver.getCurrentUrl()];\n                        case 15:\n                            currentURL2 = _a.sent();\n                            assert.strictEqual('http://2a246.yeg.rac.sh/match/lineup', currentURL2, \"Clicking on match to record brings user to lineups page\");\n                            i = 0;\n                            _a.label = 16;\n                        case 16:\n                            if (!(i < checkBoxesForLineup.length)) return [3 /*break*/, 19];\n                            return [4 /*yield*/, checkBoxesForLineup[i].click()];\n                        case 17:\n                            _a.sent();\n                            _a.label = 18;\n                        case 18:\n                            i++;\n                            return [3 /*break*/, 16];\n                        case 19: return [4 /*yield*/, driver.findElements(selenium_webdriver_1.By.className('MuiButtonBase-root MuiButton-root MuiButton-contained'))];\n                        case 20:\n                            matchLineupButtons = _a.sent();\n                            // click next button\n                            return [4 /*yield*/, matchLineupButtons[1].click()];\n                        case 21:\n                            // click next button\n                            _a.sent();\n                            return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementLocated(selenium_webdriver_1.By.className('btn btn-success')))];\n                        case 22: \n                        // wait for start button to load and click it to start timer \n                        return [4 /*yield*/, (_a.sent()).click()\n                            // assert we are on loading screen now that elements loaded\n                        ];\n                        case 23:\n                            // wait for start button to load and click it to start timer \n                            _a.sent();\n                            return [4 /*yield*/, driver.getCurrentUrl()];\n                        case 24:\n                            currentURL3 = _a.sent();\n                            assert.strictEqual(currentURL3, 'http://2a246.yeg.rac.sh/match/recording', 'Check we are on recording page after setting lineup');\n                            // sleep for a second to make sure timer has incremented\n                            sleep(1);\n                            return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.className('Timer-display'))];\n                        case 25:\n                            timer = _a.sent();\n                            return [4 /*yield*/, timer.getText()];\n                        case 26:\n                            timerTime = _a.sent();\n                            assert.notStrictEqual(timerTime, '00 : 00 : 00 : 00', 'Ensure timer has started');\n                            return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementLocated(selenium_webdriver_1.By.className('btn btn-danger')), 3000)];\n                        case 27: \n                        // pause button should now be present, click it and end the half\n                        return [4 /*yield*/, (_a.sent()).click()];\n                        case 28:\n                            // pause button should now be present, click it and end the half\n                            _a.sent();\n                            return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementLocated(selenium_webdriver_1.By.className('btn btn-warning')), 3000)];\n                        case 29: \n                        // now click end half\n                        return [4 /*yield*/, (_a.sent()).click()];\n                        case 30:\n                            // now click end half\n                            _a.sent();\n                            return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementLocated(selenium_webdriver_1.By.className('btn btn-success')), 5000)];\n                        case 31: \n                        // start second half and end it, buttons have been changing need to locate again\n                        // clicks start to start second half\n                        return [4 /*yield*/, (_a.sent()).click()];\n                        case 32:\n                            // start second half and end it, buttons have been changing need to locate again\n                            // clicks start to start second half\n                            _a.sent();\n                            //find period display and assert it is now the second half\n                            sleep(0.5);\n                            return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.className('Period-display'))];\n                        case 33:\n                            periodDisplay = _a.sent();\n                            return [4 /*yield*/, periodDisplay.getText()];\n                        case 34:\n                            periodDisplayText = _a.sent();\n                            assert.strictEqual(periodDisplayText, '2nd Half', \"Should now display second half after ending half\");\n                            return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementLocated(selenium_webdriver_1.By.className('btn btn-danger')), 5000)];\n                        case 35: \n                        // click pause\n                        return [4 /*yield*/, (_a.sent()).click()];\n                        case 36:\n                            // click pause\n                            _a.sent();\n                            // click end game\n                            sleep(0.5);\n                            return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementLocated(selenium_webdriver_1.By.className('btn btn-danger')), 5000)];\n                        case 37: return [4 /*yield*/, (_a.sent()).click()];\n                        case 38:\n                            _a.sent();\n                            return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementLocated(selenium_webdriver_1.By.id('dropdown-basic')))];\n                        case 39: \n                        // we will now be on the dashboard page, lets open the stats for the game played and ensure reports are present\n                        // click stats by match icon\n                        return [4 /*yield*/, (_a.sent()).click()];\n                        case 40:\n                            // we will now be on the dashboard page, lets open the stats for the game played and ensure reports are present\n                            // click stats by match icon\n                            _a.sent();\n                            return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementLocated(selenium_webdriver_1.By.className('dropdown-item')))];\n                        case 41: \n                        // select first match\n                        return [4 /*yield*/, (_a.sent()).click()];\n                        case 42:\n                            // select first match\n                            _a.sent();\n                            // locating that table object is present\n                            return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementsLocated(selenium_webdriver_1.By.id('tableTitle')), 5000)];\n                        case 43:\n                            // locating that table object is present\n                            _a.sent();\n                            // giving time for tables to load\n                            sleep(1);\n                            return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementsLocated(selenium_webdriver_1.By.id('tableTitle')))];\n                        case 44:\n                            tablesWithIds = _a.sent();\n                            return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementLocated(selenium_webdriver_1.By.tagName('h4')))];\n                        case 45:\n                            possessionTimeTable = _a.sent();\n                            return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementLocated(selenium_webdriver_1.By.tagName('h2')))];\n                        case 46:\n                            onForGoalTable = _a.sent();\n                            return [4 /*yield*/, possessionTimeTable.getText()];\n                        case 47:\n                            possessionTimeTableText = _a.sent();\n                            // make sure possession time table first one present\n                            assert.strictEqual(possessionTimeTableText, 'Possession Time', 'Possession time table is present');\n                            return [4 /*yield*/, tablesWithIds[0].getText()];\n                        case 48:\n                            numberOfTouches = _a.sent();\n                            return [4 /*yield*/, tablesWithIds[1].getText()];\n                        case 49:\n                            timeOnField = _a.sent();\n                            return [4 /*yield*/, tablesWithIds[2].getText()];\n                        case 50:\n                            plusMinus = _a.sent();\n                            return [4 /*yield*/, onForGoalTable.getText()];\n                        case 51:\n                            onForGoal = _a.sent();\n                            console.log('tables with ids', tablesWithIds);\n                            console.log('numberoftouches', numberOfTouches);\n                            console.log('time on field', timeOnField);\n                            console.log('plus mins', plusMinus);\n                            // assert table headers equal what they should\n                            //number of touches\n                            assert.strictEqual(numberOfTouches, 'Number of Touches', 'Correct header for Number of Touches Table');\n                            // time on field\n                            assert.strictEqual(timeOnField, 'Time on Field', 'Correct header for Time on Field Table');\n                            // plus minus\n                            assert.strictEqual(plusMinus, 'Plus Minus', 'Correct header for Plus Minus Table');\n                            assert.strictEqual(onForGoal, 'Lineup for Goals', 'Correct header for Lineup During Goals table');\n                            return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.className(\"btn btn-outline-danger\"))];\n                        case 52: \n                        //log out of app by clicking log out button\n                        return [4 /*yield*/, (_a.sent()).click()];\n                        case 53:\n                            //log out of app by clicking log out button\n                            _a.sent();\n                            //should be brought back to main page\n                            // check if signup element available to ensure page is back to root\n                            return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.xpath(\"//a[@href ='/signup']\"))];\n                        case 54:\n                            //should be brought back to main page\n                            // check if signup element available to ensure page is back to root\n                            _a.sent();\n                            return [4 /*yield*/, driver.getCurrentUrl()];\n                        case 55:\n                            currentURL4 = _a.sent();\n                            assert.strictEqual(currentURL4, 'http://2a246.yeg.rac.sh/');\n                            return [2 /*return*/];\n                    }\n                });\n            });",
                  "err": {},
                  "uuid": "592838eb-f64f-4258-aefe-ccd4e89a7100",
                  "parentUUID": "10e3608b-81a9-4066-ba23-a2d49d03dc6b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bc8b99ef-9b75-4870-ada3-5530d1645cea",
                "ab352475-505b-4154-9c74-5cad4797bd72",
                "b31a2cd1-c728-41c5-8fbb-88241a1a6e34",
                "279b3603-48b2-40a5-842a-5a04498c96f3",
                "592838eb-f64f-4258-aefe-ccd4e89a7100"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 34277,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 100000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "ReportDirectory"
      },
      "version": "5.1.0"
    }
  }
}